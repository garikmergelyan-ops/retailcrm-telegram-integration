const axios = require('axios');
require('dotenv').config();

async function testRetailCRMAPI() {
    try {
        const retailcrmUrl = process.env.RETAILCRM_URL;
        const apiKey = process.env.RETAILCRM_API_KEY;
        
        if (!retailcrmUrl || !apiKey) {
            console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ RetailCRM');
            return;
        }

        console.log('üîç –¢–µ—Å—Ç–∏—Ä—É—é API RetailCRM...\n');
        
        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤—É—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
        console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è—é –±–∞–∑–æ–≤—É—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API...');
        try {
            const response = await axios.get(`${retailcrmUrl}/api/v5/orders`, {
                params: { apiKey, limit: 20 }
            });
            
            if (response.data.success) {
                console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω');
                console.log('üìä –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤:', response.data.orders?.length || 0);
                
                // 2. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã
                console.log('\n2Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã...');
                if (response.data.orders?.length > 0) {
                    console.log('‚úÖ –ó–∞–∫–∞–∑—ã –ø–æ–ª—É—á–µ–Ω—ã. –ü—Ä–∏–º–µ—Ä—ã —Å—Ç–∞—Ç—É—Å–æ–≤:');
                    response.data.orders.slice(0, 5).forEach(order => {
                        console.log(`   - –ó–∞–∫–∞–∑ ${order.number || order.id}: —Å—Ç–∞—Ç—É—Å "${order.status}"`);
                    });
                } else {
                    console.log('‚ÑπÔ∏è –ó–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                }
                
            } else {
                console.error('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', response.data.errorMsg);
                return;
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ API:', error.message);
            if (error.response) {
                console.error('–î–µ—Ç–∞–ª–∏:', error.response.data);
            }
            return;
        }

        // 3. –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ç—É—Å–æ–≤
        console.log('\n3Ô∏è‚É£ –ü—Ä–æ–±—É—é –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ç—É—Å–æ–≤...');
        try {
            const refResponse = await axios.get(`${retailcrmUrl}/api/v5/reference/order-statuses`, {
                params: { apiKey }
            });
            
            if (refResponse.data.success) {
                console.log('‚úÖ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ç—É—Å–æ–≤:');
                refResponse.data.orderStatuses?.forEach(status => {
                    console.log(`   - ${status.code}: ${status.name}`);
                });
            } else {
                console.log('‚ÑπÔ∏è –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ç—É—Å–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            }
        } catch (error) {
            console.log('‚ÑπÔ∏è –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ç—É—Å–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
        }

    } catch (error) {
        console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
    }
}

testRetailCRMAPI();
